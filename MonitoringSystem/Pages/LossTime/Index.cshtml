@page
@model MonitoringSystem.Pages.LossTime.IndexModel
@{
    ViewData["Title"] = "Production Loss Time";
}

<div class="row d-flex justify-content-between mx-3 align-items-center mb-2">
    <div class="col-12">
        <div class="d-flex justify-content-between align-items-center">
            <form method="post" asp-page-handler="Filter" class="w-auto">
                <div class="form-group d-flex align-items-center gap-3 flex-wrap">
                    <div class="d-flex gap-3 align-items-center">
                        <label class="fw-bold fs-6">Start Date</label>
                        <input type="date" class="form-control border-dark filter-control" id="StartSelectedDate" name="StartSelectedDate" value="@Model.StartSelectedDate.ToString("yyyy-MM-dd")">
                    </div>
                    <div class="d-flex gap-3 align-items-center">
                        <label class="fw-bold fs-6">End Date</label>
                        <input type="date" class="form-control border-dark filter-control" id="EndSelectedDate" name="EndSelectedDate" value="@Model.EndSelectedDate.ToString("yyyy-MM-dd")">
                    </div>
                    <div class="d-flex gap-3 align-items-center">
                        <label class="fw-bold fs-6">Machine Line</label>
                        <select class="form-select border-dark filter-control" id="MachineLine" name="MachineLine" asp-for="MachineLine">
                            <option value="All">All</option>
                            <option value="MCH1-01">CU</option>
                            <option value="MCH1-02">CS</option>
                        </select>
                    </div>
                    <div class="d-flex gap-3 align-items-center">
                        <label class="fw-bold fs-6">Shift</label>
                        <div class="d-flex gap-2">
                            <div class="form-check">
                                <input class="form-check-input filter-control" type="checkbox" id="Shift1" name="SelectedShifts" value="1" @(Model.SelectedShifts.Contains("1") ? "checked" : "")>
                                <label class="form-check-label" for="Shift1">1</label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input filter-control" type="checkbox" id="Shift2" name="SelectedShifts" value="2" @(Model.SelectedShifts.Contains("2") ? "checked" : "")>
                                <label class="form-check-label" for="Shift2">2</label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input filter-control" type="checkbox" id="Shift3" name="SelectedShifts" value="3" @(Model.SelectedShifts.Contains("3") ? "checked" : "")>
                                <label class="form-check-label" for="Shift3">3</label>
                            </div>
                        </div>
                    </div>

                    <div class="d-flex gap-2">
                        <button type="submit" class="btn fw-bold fs-6 text-white" style="background-color: rgb(61, 121, 176);">Search</button>
                        <button type="submit" asp-page-handler="Reset" class="btn fw-bold fs-6 text-white" style="background-color: rgb(176, 61, 61);">Reset</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Side-by-side Graph and Table View -->
<div class="row mt-2">
    <div class="col-md-5">
        <!-- Chart View -->
        <div class="card shadow-sm h-100">
            <div class="card-header bg-white">
                <h5 class="card-title mb-0 fw-bold fs-8">Loss Time Categories (in Minutes)</h5>
            </div>
            <div class="card-body">
                <canvas id="lossTimeChart" style="width: 100%; height: 350px;"></canvas>
            </div>
        </div>
    </div>
    <div class="col-md-7">
        <!-- Table View -->
        <div class="card shadow-sm h-100">
            <div class="card-header bg-white">
                <h5 class="card-title mb-0 fw-bold fs-8">Loss Time Data</h5>
            </div>
            <div class="card-body p-0">
                @if (Model.HasDataToDisplay)
                {
                    <div class="table-responsive" style="max-height: 350px;">
                        <table class="table table-hover table-striped mb-0" id="lossTimeTable">
                            <!-- Your existing table content -->
                            <thead class="sticky-top bg-light">
                                <tr>
                                    <th>No.</th>
                                    <th>Date</th>
                                    <th>Loss Time</th>
                                    <th>Category</th>
                                    <th>Start Time</th>
                                    <th>End Time</th>
                                    <th>Duration (Seconds)</th>
                                    <th>Location</th>
                                    <th>Shift</th>
                                </tr>
                            </thead>
                            <tbody id="lossTimeTableBody">
                                @foreach (var item in Model.LossTimeData.Select((data, index) => new { Data = data, Index = index + 1 + (Model.CurrentPage - 1) * Model.PageSize }))
                                {
                                    <tr>
                                        <td>@item.Index</td>
                                        <td>@item.Data.Date.ToString("dd-MM-yyyy")</td>
                                        <td>@item.Data.LossTime</td>
                                        <td>@item.Data.Category</td>
                                        <td>@item.Data.Start.ToString(@"hh\:mm\:ss")</td>
                                        <td>@item.Data.End.ToString(@"hh\:mm\:ss")</td>
                                        <td>@item.Data.Duration</td>
                                        <td>@item.Data.Location</td>
                                        <td>@item.Data.Shift</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="d-flex align-items-center justify-content-center" style="height: 350px;">
                        <div class="text-center text-muted">
                            <i class="fas fa-inbox fa-3x mb-3"></i>
                            <h5>No Data Available</h5>
                            <p>No records found for the selected criteria or all records are within break times.</p>
                        </div>
                    </div>
                }
            </div>
            @if (Model.HasDataToDisplay)
            {
                <div class="card-footer bg-white">
                    <!-- Pagination Controls -->
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <span class="fw-bold">Total: @Model.TotalRecords records</span>
                        </div>
                        <nav aria-label="Page navigation">
                            <ul class="pagination mb-0">
                                <!-- First Page Button -->
                                <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                                    <form method="post" asp-page-handler="ChangePage">
                                        <input type="hidden" name="pageNumber" value="1" />
                                        <input type="hidden" name="pageSize" value="10" />
                                        <input type="hidden" name="startSelectedDate" value="@Model.StartSelectedDate.ToString("yyyy-MM-dd")" />
                                        <input type="hidden" name="endSelectedDate" value="@Model.EndSelectedDate.ToString("yyyy-MM-dd")" />
                                        <input type="hidden" name="machineLine" value="@Model.MachineLine" />
                                        @foreach (var shift in Model.SelectedShifts)
                                        {
                                            <input type="hidden" name="selectedShifts" value="@shift" />
                                        }
                                        @* <input type="hidden" name="excludeBreakTimes" value="@Model.ExcludeBreakTimes.ToString().ToLower()" /> *@
                                        <input type="hidden" name="additionalBreakTime1Start" value="@Model.AdditionalBreakTime1Start" />
                                        <input type="hidden" name="additionalBreakTime1End" value="@Model.AdditionalBreakTime1End" />
                                        <input type="hidden" name="additionalBreakTime2Start" value="@Model.AdditionalBreakTime2Start" />
                                        <input type="hidden" name="additionalBreakTime2End" value="@Model.AdditionalBreakTime2End" />
                                        <button type="submit" class="page-link">&laquo;</button>
                                    </form>
                                </li>

                                <!-- Previous Button -->
                                <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                                    <form method="post" asp-page-handler="ChangePage">
                                        <input type="hidden" name="pageNumber" value="@(Model.CurrentPage - 1)" />
                                        <input type="hidden" name="pageSize" value="10" />
                                        <input type="hidden" name="startSelectedDate" value="@Model.StartSelectedDate.ToString("yyyy-MM-dd")" />
                                        <input type="hidden" name="endSelectedDate" value="@Model.EndSelectedDate.ToString("yyyy-MM-dd")" />
                                        <input type="hidden" name="machineLine" value="@Model.MachineLine" />
                                        @foreach (var shift in Model.SelectedShifts)
                                        {
                                            <input type="hidden" name="selectedShifts" value="@shift" />
                                        }
                                        @* <input type="hidden" name="excludeBreakTimes" value="@Model.ExcludeBreakTimes.ToString().ToLower()" /> *@
                                        <input type="hidden" name="additionalBreakTime1Start" value="@Model.AdditionalBreakTime1Start" />
                                        <input type="hidden" name="additionalBreakTime1End" value="@Model.AdditionalBreakTime1End" />
                                        <input type="hidden" name="additionalBreakTime2Start" value="@Model.AdditionalBreakTime2Start" />
                                        <input type="hidden" name="additionalBreakTime2End" value="@Model.AdditionalBreakTime2End" />
                                        <button type="submit" class="page-link">&lsaquo;</button>
                                    </form>
                                </li>

                                <!-- Page Numbers -->
                                @{
                                    int startPage = Math.Max(1, Model.CurrentPage - 2);
                                    int endPage = Math.Min(Model.TotalPages, startPage + 4);

                                    if (endPage - startPage < 4)
                                    {
                                        startPage = Math.Max(1, endPage - 4);
                                    }
                                }

                                @for (int i = startPage; i <= endPage; i++)
                                {
                                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                        <form method="post" asp-page-handler="ChangePage">
                                            <input type="hidden" name="pageNumber" value="@i" />
                                            <input type="hidden" name="pageSize" value="10" />
                                            <input type="hidden" name="startSelectedDate" value="@Model.StartSelectedDate.ToString("yyyy-MM-dd")" />
                                            <input type="hidden" name="endSelectedDate" value="@Model.EndSelectedDate.ToString("yyyy-MM-dd")" />
                                            <input type="hidden" name="machineLine" value="@Model.MachineLine" />
                                            @foreach (var shift in Model.SelectedShifts)
                                            {
                                                <input type="hidden" name="selectedShifts" value="@shift" />
                                            }
                                            @* <input type="hidden" name="excludeBreakTimes" value="@Model.ExcludeBreakTimes.ToString().ToLower()" /> *@
                                            <input type="hidden" name="additionalBreakTime1Start" value="@Model.AdditionalBreakTime1Start" />
                                            <input type="hidden" name="additionalBreakTime1End" value="@Model.AdditionalBreakTime1End" />
                                            <input type="hidden" name="additionalBreakTime2Start" value="@Model.AdditionalBreakTime2Start" />
                                            <input type="hidden" name="additionalBreakTime2End" value="@Model.AdditionalBreakTime2End" />
                                            <button type="submit" class="page-link">@i</button>
                                        </form>
                                    </li>
                                }

                                <!-- Next Button -->
                                <li class="page-item @(Model.CurrentPage >= Model.TotalPages ? "disabled" : "")">
                                    <form method="post" asp-page-handler="ChangePage">
                                        <input type="hidden" name="pageNumber" value="@(Model.CurrentPage + 1)" />
                                        <input type="hidden" name="pageSize" value="10" />
                                        <input type="hidden" name="startSelectedDate" value="@Model.StartSelectedDate.ToString("yyyy-MM-dd")" />
                                        <input type="hidden" name="endSelectedDate" value="@Model.EndSelectedDate.ToString("yyyy-MM-dd")" />
                                        <input type="hidden" name="machineLine" value="@Model.MachineLine" />
                                        @foreach (var shift in Model.SelectedShifts)
                                        {
                                            <input type="hidden" name="selectedShifts" value="@shift" />
                                        }
                                        @* <input type="hidden" name="excludeBreakTimes" value="@Model.ExcludeBreakTimes.ToString().ToLower()" /> *@
                                        <input type="hidden" name="additionalBreakTime1Start" value="@Model.AdditionalBreakTime1Start" />
                                        <input type="hidden" name="additionalBreakTime1End" value="@Model.AdditionalBreakTime1End" />
                                        <input type="hidden" name="additionalBreakTime2Start" value="@Model.AdditionalBreakTime2Start" />
                                        <input type="hidden" name="additionalBreakTime2End" value="@Model.AdditionalBreakTime2End" />
                                        <button type="submit" class="page-link">&rsaquo;</button>
                                    </form>
                                </li>

                                <!-- Last Page Button -->
                                <li class="page-item @(Model.CurrentPage >= Model.TotalPages ? "disabled" : "")">
                                    <form method="post" asp-page-handler="ChangePage">
                                        <input type="hidden" name="pageNumber" value="@Model.TotalPages" />
                                        <input type="hidden" name="pageSize" value="10" />
                                        <input type="hidden" name="startSelectedDate" value="@Model.StartSelectedDate.ToString("yyyy-MM-dd")" />
                                        <input type="hidden" name="endSelectedDate" value="@Model.EndSelectedDate.ToString("yyyy-MM-dd")" />
                                        <input type="hidden" name="machineLine" value="@Model.MachineLine" />
                                        @foreach (var shift in Model.SelectedShifts)
                                        {
                                            <input type="hidden" name="selectedShifts" value="@shift" />
                                        }
                                        @* <input type="hidden" name="excludeBreakTimes" value="@Model.ExcludeBreakTimes.ToString().ToLower()" /> *@
                                        <input type="hidden" name="additionalBreakTime1Start" value="@Model.AdditionalBreakTime1Start" />
                                        <input type="hidden" name="additionalBreakTime1End" value="@Model.AdditionalBreakTime1End" />
                                        <input type="hidden" name="additionalBreakTime2Start" value="@Model.AdditionalBreakTime2Start" />
                                        <input type="hidden" name="additionalBreakTime2End" value="@Model.AdditionalBreakTime2End" />
                                        <button type="submit" class="page-link">&raquo;</button>
                                    </form>
                                </li>
                            </ul>
                        </nav>
                    </div>
                </div>
            }
            
        </div>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>
<script>
    // Convert chart data from seconds to minutes
    // Get chart data (already converted to minutes in the C# code)
    let chartData;
    try {
        chartData = @Html.Raw(Json.Serialize(Model.ChartDataJson));
        console.log("Chart data loaded:", chartData);

        // Parse the JSON string if it's already serialized
        if (typeof chartData === 'string') {
            chartData = JSON.parse(chartData);
        }
    } catch (error) {
        console.error("Error parsing chart data:", error);
        chartData = {
            labels: [],
            shift1Data: [],
            shift2Data: [],
            shift3Data: []
        };
    }

    // Create chart - data is already in minutes from backend
    document.addEventListener('DOMContentLoaded', function() {
        try {
            const ctx = document.getElementById('lossTimeChart').getContext('2d');
            if (!ctx) {
                console.error("Could not find chart canvas element");
                return;
            }

            // Filter out the "Other" category to have only 4 categories as requested
            const categories = chartData.labels.filter(label => label !== "Other");
            const shift1Data = chartData.shift1Data.filter((_, index) => chartData.labels[index] !== "Other");
            const shift2Data = chartData.shift2Data.filter((_, index) => chartData.labels[index] !== "Other");
            const shift3Data = chartData.shift3Data.filter((_, index) => chartData.labels[index] !== "Other");

            const lossTimeChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: categories,
                    datasets: [
                        {
                            label: 'Shift 1',
                            data: shift1Data,
                            backgroundColor: 'rgba(255, 99, 132, 0.7)',
                            borderColor: 'rgba(255, 99, 132, 1)',
                            borderWidth: 1
                        },
                        {
                            label: 'Shift 2',
                            data: shift2Data,
                            backgroundColor: 'rgba(54, 162, 235, 0.7)',
                            borderColor: 'rgba(54, 162, 235, 1)',
                            borderWidth: 1
                        },
                        {
                            label: 'Shift 3',
                            data: shift3Data,
                            backgroundColor: 'rgba(75, 192, 192, 0.7)',
                            borderColor: 'rgba(75, 192, 192, 1)',
                            borderWidth: 1
                        }
                    ]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'top',
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    return `${context.dataset.label}: ${context.raw} minutes`;
                                }
                            }
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            title: {
                                display: true,
                                text: 'Duration (minutes)'
                            },
                            stacked: true
                        },
                        x: {
                            title: {
                                display: true,
                                text: 'Loss Time Categories'
                            },
                            stacked: true
                        }
                    }
                }
            });
            console.log("Chart created successfully");
        } catch (error) {
            console.error("Error creating chart:", error);
        }
    });
</script>
