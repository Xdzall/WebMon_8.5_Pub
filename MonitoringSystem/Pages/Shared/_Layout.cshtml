@using MonitoringSystem.Data

@{
    string layoutMenu = ViewContext.HttpContext.Request.Cookies["layoutType"];
    string baseColor = "linear-gradient(109.6deg, rgb(61, 121, 176) 11.3%, rgb(35, 66, 164) 91.1%);";
    var title = ViewData["Title"] as string;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - MonitoringSystem</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link href="~/css/Sidebar.css" rel="stylesheet" />
    <link href="~/css/Navbar.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/lib/fontawesome/css/all.min.css" />
    <script src="~/lib/chartjs/dist/chart.umd.js"></script>
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/MonitoringSystem.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/site-identity.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css">

</head>
<body>
    <div class="container-fluid p-0 d-flex h-100">
        <div id="bdSidebar" class="d-flex flex-column flex-shrink-0 py-3 ps-3 pe-4 text-white offcanvas-md offcanvas-start rounded-end-4" style="width: auto; background:@baseColor !important;">
            <a href="#" class="navbar-brand text-center mt-3">
                <h4 class="fw-bold text-white">AC BU</h4>
            </a>
            <hr />
            <ul class="mynav nav nav-pills flex-column mb-auto">
                <li class="nav-item mb-1">
                    <a class="fw-semibold  px-4" href="~/">
                        <i class="fa-solid fa-house"></i>
                        Home
                    </a>    
                </li>
                <li class="nav-item mb-1">
                    <a class="fw-semibold  px-4" href="~/Summary/ProductionPlanCU">
                        <i class="fa-solid fa-clipboard-list "></i>
                        Production Plan CU
                    </a>
                </li>
                <li class="nav-item mb-1">
                    <a class="fw-semibold  px-4" href="~/Summary/ProductionPlanCS">
                        <i class="fa-solid fa-clipboard-list"></i>
                        Production Plan CS
                    </a>
                </li>
                <li class="nav-item mb-1">
                    <a href="#" data-bs-toggle="modal" data-bs-target="#breakTimeFilterModal" class="sidebar-link fw-semibold  px-4">
                        <i class="fa-solid fa-clock"></i>
                        Break Time Filter
                    </a>
                </li>
            </ul>
            
            @* Final Production *@
            @if (title == "Production Summary")
            {
                <div class="ms-2 mb-5">
                    <p class="fs-5 fw-semibold text-white">PROD. SHIFT</p>
                    <div class="bg-white rounded-3 p-3">
                        <div class="form-check">
                            <input class="form-check-input border-black" type="checkbox" id="shiftACheckBox" />
                            <label class="form-check-label fs-5 fw-semibold" style="color: rgb(61, 121, 176);">
                                SHIFT 1
                            </label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input border-black" type="checkbox" id="shiftBCheckBox" />
                            <label class="form-check-label fs-5 fw-semibold" style="color: rgb(61, 121, 176);">
                                SHIFT 2
                            </label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input border-black" type="checkbox" id="shiftBCheckBox" />
                            <label class="form-check-label fs-5 fw-semibold" style="color: rgb(61, 121, 176);">
                                SHIFT 3
                            </label>
                        </div>
                    </div>
                </div>
            }
            <div class="align-items-center center">
                <partial name="_LoginPartial" />
            </div>
        </div>
        <div class="bg-light flex-fill overflow-y-scroll">
            <div class="p-2 d-md-none d-flex text-white" style="background: @baseColor">
                <a href="#" class="text-white" data-bs-toggle="offcanvas" data-bs-target="#bdSidebar">
                    <i class="fa-solid fa-bars"></i>
                </a>
                <span class="ms-3">@layoutMenu</span>
            </div>
            <div class="p-4" style="min-height: 100%">
                <div class="d-flex justify-content-between align-items-center sticky-top p-3 bg-white rounded-3 shadow-sm mb-4">
                    <div class="nav-menu d-flex align-items-center">
                        <h5 class="align-middle ms-2 fw-semibold">@ViewData["Title"]</h5>
                        <div class="ms-4 vr"></div>
                        <a class="ms-4 nav-link text-dark fw-semibold" href="~/Summary/index">
                            Summary
                        </a>
                        <a class="ms-4 nav-link text-dark fw-semibold" href="~/Perfomance/index">
                            Performance
                        </a>
                        <a class="ms-4 nav-link text-dark fw-semibold" href="~/Quality/index ">
                            Quality
                        </a>
                        <a class="ms-4 nav-link text-dark fw-semibold" href="~/LossTime/index ">
                            Loss Time
                        </a>
                    </div>
                    <div class="d-flex align-items-center gap-3 text-end">
                        <div class="refreshDateTime text-dark">
                            <p class="mb-0 fw-semibold">@(DateTime.Now.ToString("dddd, dd MMM yyyy"))</p>
                            <p class="mb-0 fw-semibold">@(DateTime.Now.ToString("HH:mm:ss tt"))</p>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <main role="main" class="pb-3">
                            @RenderBody()
                        </main>
                    </div>
                </div>
            </div>
            <div class="position-sticky sticky-bottom w-100 bg-white shadow-sm p-1 px-4">
                @if (ViewContext.RouteData.Values["page"]?.ToString()?.Contains("LossTime") == true)
                {
                    @await Html.PartialAsync("_LossTimeSummaryPartial")
                }
                @if (ViewContext.RouteData.Values["page"]?.ToString()?.Contains("LossTime") != true){
                    <p class="text-dark text-center fs-6 mt-3">&copy; 2025 - Panasonic Manufacturing Indonesia (PMI) - AC BU</p>
                }
            </div>
        </div>
        <div class="modal fade" id="breakTimeFilterModal" tabindex="-1" aria-labelledby="breakTimeFilterModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title fw-bold" id="breakTimeFilterModalLabel">Break Time Filter</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        @{
                                var models = new MonitoringSystem.Pages.Shared.ApplyBreakFilterModel(
                                (ApplicationDbContext)Context.RequestServices.GetService(typeof(ApplicationDbContext)));
                                await models.LoadBreakTimesAsync();
                                await Html.RenderPartialAsync("_BreakTimeFilterPartial", models);
                            
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>


    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="~/js/identity-scripts.js" asp-append-version="true"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const shiftACheckbox = document.getElementById("shiftACheckBox");
            const shiftBCheckbox = document.getElementById("shiftBCheckBox");
            const shiftATable = document.getElementById("ShiftATable");
            const shiftBTable = document.getElementById("ShiftBTable");

            function updateTableVisibility() {
                const showShiftA = shiftACheckbox.checked;
                const showShiftB = shiftBCheckbox.checked;

                shiftATable.style.display = showShiftA || (!showShiftA && !showShiftB) ? "" : "none";
                shiftBTable.style.display = showShiftB || (!showShiftA && !showShiftB) ? "" : "none";
            }

            shiftACheckbox.addEventListener("change", updateTableVisibility);
            shiftBCheckbox.addEventListener("change", updateTableVisibility);

            updateTableVisibility();
        });

        $(document).ready(function () {
            setInterval(function () {
                $(".refreshFinalShift01").load(location.href + " .refreshFinalShift01");
            }, 3000);
        });
        $(document).ready(function () {
            setInterval(function () {
                $(".refreshFinalShift02").load(location.href + " .refreshFinalShift02");
            }, 3000);
        });
        $(document).ready(function () {
            setInterval(function () {
                $(".refreshFinalTotal").load(location.href + " .refreshFinalTotal");
            }, 3000);
        });
        $(document).ready(function () {
            setInterval(function () {
                $(".refreshDateTime").load(location.href + " .refreshDateTime");
            }, 3000);
        });
        $(document).ready(function () {
            setInterval(function () {
                $(".refreshDailyData").load(location.href + " .refreshDailyData");
            }, 3000);
        });
        $(document).ready(function () {
            setInterval(function () {
                $(".refreshHourlyAchievement").load(location.href + " .refreshHourlyAchievement");
            }, 3000);
        });
        // $(document).ready(function () {
        //     setInterval(function () {
        //         $(".refreshLossTimeSummary").load(location.href + " .refreshLossTimeSummary");
        //     }, 3000);
        // });
    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>

